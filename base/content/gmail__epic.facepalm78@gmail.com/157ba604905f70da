{"id":"157ba604905f70da","threadId":"157ba604905f70da","labelIds":["INBOX","CATEGORY_PROMOTIONS","UNREAD"],"snippet":"Code School Learn how the different properties in Flexbox can help you easily build popular layout styles that are flexible across various screen sizes. View the Course What You&#39;ll Learn Level 1","historyId":"219688","internalDate":"1476300573000","payload":{"mimeType":"multipart/alternative","filename":"","headers":[{"name":"Delivered-To","value":"epic.facepalm78@gmail.com"},{"name":"Received","value":"by 10.107.13.19 with SMTP id 19csp704731ion;        Wed, 12 Oct 2016 12:30:55 -0700 (PDT)"},{"name":"X-Received","value":"by 10.37.45.39 with SMTP id t39mr2458687ybt.15.1476300654738;        Wed, 12 Oct 2016 12:30:54 -0700 (PDT)"},{"name":"Return-Path","value":"<bounce-mc.us5_10342275.60273-epic.facepalm78=gmail.com@mail50.suw13.rsgsv.net>"},{"name":"Received","value":"from mail50.suw13.rsgsv.net (mail50.suw13.rsgsv.net. [198.2.183.50])        by mx.google.com with ESMTPS id a16si2545073ybj.307.2016.10.12.12.30.54        for <epic.facepalm78@gmail.com>        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);        Wed, 12 Oct 2016 12:30:54 -0700 (PDT)"},{"name":"Received-SPF","value":"pass (google.com: domain of bounce-mc.us5_10342275.60273-epic.facepalm78=gmail.com@mail50.suw13.rsgsv.net designates 198.2.183.50 as permitted sender) client-ip=198.2.183.50;"},{"name":"Authentication-Results","value":"mx.google.com;       dkim=pass header.i=@codeschool.com;       dkim=pass header.i=@gmail.mcsv.net;       spf=pass (google.com: domain of bounce-mc.us5_10342275.60273-epic.facepalm78=gmail.com@mail50.suw13.rsgsv.net designates 198.2.183.50 as permitted sender) smtp.mailfrom=bounce-mc.us5_10342275.60273-epic.facepalm78=gmail.com@mail50.suw13.rsgsv.net"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=k1; d=codeschool.com; h=Subject:From:Reply-To:To:Date:Message-ID:List-ID:List-Unsubscribe:Content-Type:MIME-Version; i=hal@codeschool.com; bh=jJBOm0qeRukDgMTSbso86qTD8Cs=; b=zSUoAhd1dtQO0PnhigNjZPpGyq5TGw8w5eLO6IjdXT9SCii2wpIC8p2Du6q/pdP9DsTcMJlwXzaU   K98lJElQutBKbuVrFLpZ8Itf7mvyOGulpdoDh9UZ+BS+B5bTn4Ab/jitt4NoMyWHAuac3jSRov23   pql89b+NGG+BVaOTW8o="},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=k1; d=gmail.mcsv.net; h=Subject:From:Reply-To:To:Date:Message-ID:X-Feedback-ID:List-ID:List-Unsubscribe:Content-Type:MIME-Version; bh=jJBOm0qeRukDgMTSbso86qTD8Cs=; b=JO0Ir59G5bN95IMHi8cUq0/xn+b3er+zIowofU+/SRVFDGI1lcnmKX0UVFJcTpSdbMbBas0EbuZA   PHrF0ghy5wPgXn3HrdFQF5LNI++lAlAZZ1IcM6s3Tje7psv7mRKwrGdY6Jm8r1vUmHYUsgm0hw06   uWHA7z6N2Q6PPBgKmZU="},{"name":"Received","value":"from (127.0.0.1) by mail50.suw13.rsgsv.net id hvq7ms22s7gi for <epic.facepalm78@gmail.com>; Wed, 12 Oct 2016 19:29:33 +0000 (envelope-from <bounce-mc.us5_10342275.60273-epic.facepalm78=gmail.com@mail50.suw13.rsgsv.net>)"},{"name":"Subject","value":"ðŸ†•Â Flexbox course launched!"},{"name":"From","value":"Code School <hal@codeschool.com>"},{"name":"Reply-To","value":"Code School <hal@codeschool.com>"},{"name":"To","value":"<epic.facepalm78@gmail.com>"},{"name":"Date","value":"Wed, 12 Oct 2016 19:29:33 +0000"},{"name":"Message-ID","value":"<8234ed62d6a7fa87721ff1d8a036fab5d0e.20161012192853@mail50.suw13.rsgsv.net>"},{"name":"X-Mailer","value":"MailChimp Mailer - **CID60d18f5e08036fab5d0e**"},{"name":"X-Campaign","value":"mailchimp8234ed62d6a7fa87721ff1d8a.60d18f5e08"},{"name":"X-campaignid","value":"mailchimp8234ed62d6a7fa87721ff1d8a.60d18f5e08"},{"name":"X-Report-Abuse","value":"Please report abuse for this campaign here: http://www.mailchimp.com/abuse/abuse.phtml?u=8234ed62d6a7fa87721ff1d8a&id=60d18f5e08&e=036fab5d0e"},{"name":"X-MC-User","value":"8234ed62d6a7fa87721ff1d8a"},{"name":"X-Feedback-ID","value":"10342275:10342275.60273:us5:mc"},{"name":"List-ID","value":"8234ed62d6a7fa87721ff1d8amc list <8234ed62d6a7fa87721ff1d8a.24393.list-id.mcsv.net>"},{"name":"X-Accounttype","value":"pr"},{"name":"List-Unsubscribe","value":"<mailto:unsubscribe-mc.us5_8234ed62d6a7fa87721ff1d8a.60d18f5e08-036fab5d0e@mailin1.us2.mcsv.net?subject=unsubscribe>, <http://CodeSchool.us5.list-manage.com/unsubscribe?u=8234ed62d6a7fa87721ff1d8a&id=b819d211aa&e=036fab5d0e&c=60d18f5e08>"},{"name":"x-mcda","value":"FALSE"},{"name":"Content-Type","value":"multipart/alternative; boundary=\"_----------=_MCPart_1702754479\""},{"name":"MIME-Version","value":"1.0"}],"body":{"size":0},"parts":[{"partId":"0","mimeType":"text/plain","filename":"","headers":[{"name":"Content-Type","value":"text/plain; charset=\"utf-8\"; format=\"fixed\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"body":{"size":4230,"data":"Q3JhY2tpbmcgdGhlIENhc2UgV2l0aCBGbGV4Ym94DQoNCnRhYmxlIHsNCmJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7DQpib3JkZXItc3BhY2luZzogMDsNCn0NCg0KdGQudGV4dCwNCnRkLnRleHQtLWZvb3RlciwNCi5oYXMtYnRuIHsNCm1zby1saW5lLWhlaWdodC1ydWxlOiBleGFjdGx5Ow0KLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7DQotbXMtdGV4dC1zaXplLWFkanVzdDogbm9uZTsNCi13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsNCn0NCg0KYVt4LWFwcGxlLWRhdGEtZGV0ZWN0b3JzXSB7DQpjb2xvcjogaW5oZXJpdCAhaW1wb3J0YW50Ow0KdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7DQpmb250LXNpemU6IGluaGVyaXQgIWltcG9ydGFudDsNCmZvbnQtZmFtaWx5OiBpbmhlcml0ICFpbXBvcnRhbnQ7DQpmb250LXdlaWdodDogaW5oZXJpdCAhaW1wb3J0YW50Ow0KbGluZS1oZWlnaHQ6IGluaGVyaXQgIWltcG9ydGFudDsNCn0NCg0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsNCi50ZXh0IHsNCmZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50Ow0KbGluZS1oZWlnaHQ6IDIxcHggIWltcG9ydGFudDsNCn0NCg0KLnRleHQtLWZvb3RlciB7DQpmb250LXNpemU6IDEycHggIWltcG9ydGFudDsNCmxpbmUtaGVpZ2h0OiAxOHB4ICFpbXBvcnRhbnQ7DQp9DQoNCi5oMSB7DQpmb250LXNpemU6IDIwcHggIWltcG9ydGFudDsNCn0NCg0KLmgyIHsNCmZvbnQtc2l6ZTogMThweCAhaW1wb3J0YW50Ow0KfQ0KDQouaDMgew0KZm9udC1zaXplOiAxNnB4ICFpbXBvcnRhbnQ7DQp9DQoNCi5oNCB7DQpmb250LXNpemU6IDE0cHggIWltcG9ydGFudDsNCn0NCg0KLmg1IHsNCmZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50Ow0KfQ0KDQp0YWJsZSB7DQpsaW5lLWhlaWdodDogMS41ICFpbXBvcnRhbnQ7DQp9DQoNCi5oMSwgLmgyLCAuaDMsIC5oNCwgLmg1IHsNCmxpbmUtaGVpZ2h0OiAxLjIgIWltcG9ydGFudDsNCn0NCg0KLmNzLWxvZ28gew0Kd2lkdGg6IDEyMHB4ICFpbXBvcnRhbnQ7DQp9DQoNCi5mbGV4LXNpemUgew0KbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7DQp3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KfQ0KDQouZmxleC1zaXplIGltZyB7DQptYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCn0NCg0KLnMtaGVpZ2h0IHsNCmhlaWdodDogMTBweCAhaW1wb3J0YW50Ow0KfQ0KDQoucy1kYiB7DQpkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50Ow0KfQ0KDQoucy1kaWIgew0KZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7DQp9DQoNCi5zLWhmIHsNCmhlaWdodDogMCAhaW1wb3J0YW50Ow0KfQ0KDQoucy1wYWYgew0KcGFkZGluZzogMCAhaW1wb3J0YW50Ow0KfQ0KDQoucy1wYmYgew0KcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDsNCn0NCg0KLnMtcGJtIHsNCnBhZGRpbmctYm90dG9tOiAxNnB4ICFpbXBvcnRhbnQ7DQp9DQoNCi5zLXBsZiB7DQpwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDsNCn0NCg0KLnMtcHJmIHsNCnBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDsNCn0NCg0KLnMtcHRzIHsNCnBhZGRpbmctdG9wOiA4cHggIWltcG9ydGFudDsNCn0NCg0KLnMtcHRtIHsNCnBhZGRpbmctdG9wOiAxNnB4ICFpbXBvcnRhbnQ7DQp9DQoNCi5zLXB0bCB7DQpwYWRkaW5nLXRvcDogMzJweCAhaW1wb3J0YW50Ow0KfQ0KDQoucy10YWMgew0KdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7DQp9DQoNCi5zLXRhbCB7DQp0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7DQp9DQoucy10c3Mgew0KZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7DQp9DQp9DQpAbWVkaWEgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzc1cHgpIGFuZA0KKG1heC1kZXZpY2Utd2lkdGg6IDY2N3B4KSB7DQoudGV4dCB7DQpmb250LXNpemU6IDE2cHggIWltcG9ydGFudDsNCn0NCn0NCg0KLmJnLWVtYWlsIHsNCmJhY2tncm91bmQ6DQp1cmwoJ2h0dHBzOi8vZ2FsbGVyeS5tYWlsY2hpbXAuY29tLzgyMzRlZDYyZDZhN2ZhODc3MjFmZjFkOGEvaW1hZ2VzLzE0NjViYjQ0LTQxMGUtNDJlNS1hODk0LWIxMDNhNDlhM2MwMy5qcGcnKTsNCiFpbXBvcnRhbnQ7DQpiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0ICFpbXBvcnRhbnQ7DQpiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyICFpbXBvcnRhbnQ7DQpiYWNrZ3JvdW5kLXNpemU6IGNvdmVyICFpbXBvcnRhbnQ7DQp9DQoNCm51bGwNCg0KbnVsbA0KDQpudWxsDQoNCkNvZGUgU2Nob29sDQoNCkNyYWNraW5nIHRoZSBDYXNlDQpXaXRoIEZsZXhib3gNCg0KTGVhcm4gaG93IHRoZQ0KZGlmZmVyZW50IHByb3BlcnRpZXMgaW4gRmxleGJveCBjYW4gaGVscCB5b3UgZWFzaWx5IGJ1aWxkIHBvcHVsYXINCmxheW91dCBzdHlsZXMgdGhhdCBhcmUgZmxleGlibGUgYWNyb3NzIHZhcmlvdXMgc2NyZWVuIHNpemVzLg0KDQpWaWV3IHRoZSBDb3Vyc2UgKCBodHRwczovL3d3dy5jb2Rlc2Nob29sLmNvbS9jb3Vyc2VzL2NyYWNraW5nLXRoZS1jYXNlLXdpdGgtZmxleGJveD91dG1fbWVkaXVtPWVtYWlsJnV0bV9jYW1wYWlnbj1hbm5vdW5jZW1lbnRfY3JhY2tpbmdfdGhlX2Nhc2Vfd2l0aF9mbGV4Ym94JnV0bV9zb3VyY2U9bWFpbGNoaW1wJnV0bV9jb250ZW50PW51bGwgKQ0KDQpXaGF0IFlvdSdsbCBMZWFybg0KDQpMZXZlbCAxDQoNCkxlYXJuIGhvdyB0byBhbmFseXplIHRoZSBuZXcgZGlzcGxheSBwcm9wZXJ0eSwgY29udGFpbmVycywgbGluZXMsDQphbmQgaXRlbXMuDQoNCkxldmVsIDINCg0KRXhwbG9yZSBob3cgdG8gYWxpZ24gaXRlbXMsIGRpc3RyaWJ1dGUgc3BhY2UsIGFuZCBjaGFuZ2Ugb3JkZXINCmFsb25nIHRoZSBtYXN0ZXIgYXhpcy4NCg0KTGV2ZWwgMw0KDQpTdHJhaWdodGVuIG91dCB0aGUgZmFjdHMgYW5kIGxlYXJuIGhvdyB0byBhbGlnbiBpdGVtcyBhbmQNCmRpc3RyaWJ1dGUgc3BhY2UgYWxvbmcgdGhlIGNyb3NzIGF4aXMuDQoNCkxldmVsIDQNCg0KU2hhcGUgdXAgYnkgZ3Jvd2luZywgc2hyaW5raW5nLCBhbmQgZGVjbGFyaW5nIHNpemVzIG9mIGl0ZW1zLg0KDQpMZXZlbCA1OiBQcm9wZXJ0eSBQbG90dGluZw0KDQpEaXNjb3ZlciBob3cgdG8gYWxpZ24gY29udGVudCBpbiBlZGdlIGNhc2VzIGFuZCBncm91cCBtdWx0aXBsZQ0KcHJvcGVydGllcy4NCg0KV2h5IExlYXJuDQpGbGV4Ym94Pw0KDQpDb3Vyc2UNCkluc3RydWN0b3IgRGFuIERlbm5leSBleHBsYWlucyB0d28gb2YgdGhlIG1haW4gYmVuZWZpdHMgKCBodHRwczovL3d3dy5jb2Rlc2Nob29sLmNvbS9ibG9nLzIwMTYvMTAvMTIvd2h5LWZsZXhib3g_dXRtX21lZGl1bT1lbWFpbCZ1dG1fY2FtcGFpZ249YW5ub3VuY2VtZW50X2NyYWNraW5nX3RoZV9jYXNlX3dpdGhfZmxleGJveCZ1dG1fc291cmNlPW1haWxjaGltcCZ1dG1fY29udGVudD1udWxsICkgdG8gbGVhcm5pbmcgYW5kIHVzaW5nIEZsZXhib3guDQoNClR3ZWV0IFRoaXMNCg0KRG9lcyB5b3VyIGVtYWlsDQpjbGllbnQgc3VwcG9ydCBmbGV4Ym94Pw0KDQpJZiBpdCBkb2VzLCB0aGUNCmZsZXhib3ggYm94ZXMgd2lsbCBmaWxsIHVwIGFsbCBvZiB0aGUgd2lkdGggdGhhdCB0aGlzIHRleHQgZG9lcy4NCg0KRiBsIGUgeCBiIG8geA0KDQpIYXZlIHF1ZXN0aW9ucyBvciBuZWVkIGFzc2lzdGFuY2U_DQoNClN1cHBvcnQNCg0KU3VwcG9ydCAoIGh0dHBzOi8vd3d3LmNvZGVzY2hvb2wuY29tL3N1cHBvcnQgKQ0KDQpGQVENCg0KRkFRICggaHR0cHM6Ly93d3cuY29kZXNjaG9vbC5jb20vZmFxICkNCg0KwqkgMjAxNiBDb2RlIFNjaG9vbCBMTEMuIENyYWZ0ZWQgbG92aW5nbHkgaW4gT3JsYW5kbywNCkZsb3JpZGEuDQoNCkNvZGUgU2Nob29sDQo2MTggRSBTb3V0aCBTdHJlZXQNClN1aXRlIDYyMA0KT3JsYW5kbywgRkwgMzI4MDENClVTQQ0KDQpFZGl0IHlvdXIgZW1haWwgc2V0dGluZ3MgKCBodHRwczovL3d3dy5jb2Rlc2Nob29sLmNvbS9hY2NvdW50L2VkaXQgKQ0KDQpVbnN1YnNjcmliZQ0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQpVbnN1YnNjcmliZSBlcGljLmZhY2VwYWxtNzhAZ21haWwuY29tIGZyb20gdGhpcyBsaXN0Og0KaHR0cDovL0NvZGVTY2hvb2wudXM1Lmxpc3QtbWFuYWdlLmNvbS91bnN1YnNjcmliZT91PTgyMzRlZDYyZDZhN2ZhODc3MjFmZjFkOGEmaWQ9YjgxOWQyMTFhYSZlPTAzNmZhYjVkMGUmYz02MGQxOGY1ZTA4"}},{"partId":"1","mimeType":"text/html","filename":"","headers":[{"name":"Content-Type","value":"text/html; charset=\"us-ascii\""}],"body":{"size":40704,"data":""}}]},"sizeEstimate":49044}