{"id":"15793608d47ec63c","threadId":"15793608d47ec63c","labelIds":["INBOX","CATEGORY_SOCIAL","UNREAD"],"snippet":"New work from Jennifer Weiner and Maria Semple, the best books of the month, and more! View this email in your browser Goodreads Hi Vu, EXCLUSIVE INTERVIEWS Jennifer Weiner The Good in Bed author pours","payload":{"mimeType":"multipart/mixed","filename":"","headers":[{"name":"Delivered-To","value":"epic.facepalm78@gmail.com"},{"name":"Received","value":"by 10.107.3.229 with SMTP id e98csp1444981ioi;        Tue, 4 Oct 2016 22:46:00 -0700 (PDT)"},{"name":"X-Received","value":"by 10.55.21.164 with SMTP id 36mr7558242qkv.215.1475646360666;        Tue, 04 Oct 2016 22:46:00 -0700 (PDT)"},{"name":"Return-Path","value":"<201610050545595e0410e5ec71472caf781aa2f710p0na@bounces.amazon.com>"},{"name":"Received","value":"from a15-152.smtp-out.amazonses.com (a15-152.smtp-out.amazonses.com. [54.240.15.152])        by mx.google.com with ESMTPS id b34si4763228qkh.220.2016.10.04.22.46.00        for <epic.facepalm78@gmail.com>        (version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);        Tue, 04 Oct 2016 22:46:00 -0700 (PDT)"},{"name":"Received-SPF","value":"pass (google.com: domain of 201610050545595e0410e5ec71472caf781aa2f710p0na@bounces.amazon.com designates 54.240.15.152 as permitted sender) client-ip=54.240.15.152;"},{"name":"Authentication-Results","value":"mx.google.com;       dkim=pass header.i=@goodreads.com;       dkim=pass header.i=@amazonses.com;       spf=pass (google.com: domain of 201610050545595e0410e5ec71472caf781aa2f710p0na@bounces.amazon.com designates 54.240.15.152 as permitted sender) smtp.mailfrom=201610050545595e0410e5ec71472caf781aa2f710p0na@bounces.amazon.com"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha256; q=dns/txt; c=relaxed/simple; s=3k7bntx5a2gkqxzrkjjnt6ws3lucfijz; d=goodreads.com; t=1475646359; i=@mail.goodreads.com; h=Date:From:To:Message-ID:Subject:MIME-Version:Content-Type; bh=2mrU9WzdsKGdVspAR7DTcx0Xrav/XwTuh0FDKdIKhJo=; b=RkwgnNS7sIUcqofGWlyZA3ANe1qXC6HMKPOT1UfJF8cdTkEzka/6E4hLgipSYcDi VWNXIjdyBBPwCgEWPLNHnKCWj/vccao5rp0C/wjUup9ZPSbqK05cjjZaFkLFGMAZUu1 nQ/dY9Trea3CMQNbJHdeFwUOV/q6OlvQuUTtgBy4="},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha256; q=dns/txt; c=relaxed/simple; s=6gbrjpgwjskckoa6a5zn6fwqkn67xbtw; d=amazonses.com; t=1475646359; h=Date:From:To:Message-ID:Subject:MIME-Version:Content-Type:Feedback-ID; bh=2mrU9WzdsKGdVspAR7DTcx0Xrav/XwTuh0FDKdIKhJo=; b=l6eNkTBN0PNvaN7Tk3ADAG444Vo51KOt6HxFlq+z0z262whxpzfZaHejwQr8nI9c V1jowrHWf+4VN7MIyNqq4yquEQnx5w9DFU7iUCz4yqnauQP/L7fKajykLjl5KPlNR0x r3MdmUsl5ueJ7+SJxH6cs4HnMG2voQTqMsLTy6NQ="},{"name":"Date","value":"Wed, 5 Oct 2016 05:45:59 +0000"},{"name":"From","value":"Goodreads <no-reply@mail.goodreads.com>"},{"name":"To","value":"\"epic.facepalm78@gmail.com\" <epic.facepalm78@gmail.com>"},{"name":"Message-ID","value":"<01000157936087f3-7e642ac7-8268-47ec-98d2-cac6d63c3db4-000000@email.amazonses.com>"},{"name":"Subject","value":"October Newsletter"},{"name":"MIME-Version","value":"1.0"},{"name":"Content-Type","value":"multipart/mixed; boundary=\"----=_Part_2737780_1596107273.1475646359388\""},{"name":"X-AMAZON-RTE-VERSION","value":"2.0"},{"name":"Bounces-to","value":"201610050545595e0410e5ec71472caf781aa2f710p0na@bounces.amazon.com"},{"name":"X-AMAZON-MAIL-RELAY-TYPE","value":"merchandizing"},{"name":"X-Original-MessageID","value":"<urn.correios.msg.201610050545595e0410e5ec71472caf781aa2f710p0na@1475646359393.rte-svc-1a-m3-d2c13208.us-east-1.amazon.com>"},{"name":"X-SES-Outgoing","value":"2016.10.05-54.240.15.152"},{"name":"Feedback-ID","value":"1.us-east-1.+gzE1S+MWTFXXYmwxo7wkk651GMxMPAUFYiyN/09X40=:AmazonSES"}],"body":{"size":0},"parts":[{"mimeType":"multipart/alternative","filename":"","headers":[{"name":"Content-Type","value":"multipart/alternative; boundary=\"----=_Part_2737781_2146938886.1475646359388\""}],"body":{"size":0},"parts":[{"partId":"0.0","mimeType":"text/plain","filename":"","headers":[{"name":"Content-Type","value":"text/plain; charset=UTF-8"},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"body":{"size":6961,"data":""}},{"partId":"0.1","mimeType":"text/html","filename":"","headers":[{"name":"Content-Type","value":"text/html; charset=UTF-8"},{"name":"Content-Transfer-Encoding","value":"7bit"}],"body":{"size":89283,"data":""}}]}]},"sizeEstimate":100018,"historyId":"214310","internalDate":"1475646359000"}