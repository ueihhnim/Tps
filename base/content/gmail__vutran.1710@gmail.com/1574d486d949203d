{"id":"1574d486d949203d","threadId":"1574d486d949203d","labelIds":["INBOX","CATEGORY_PROMOTIONS","UNREAD"],"snippet":"Discover the Latest in App Dev Coding Bootcamps: Not Just for Beginners It&#39;s a common assumption that coding bootcamps are only for students just starting to learn to code. However, they may","historyId":"904376","internalDate":"1474470304000","payload":{"mimeType":"multipart/alternative","filename":"","headers":[{"name":"Delivered-To","value":"vutran.1710@gmail.com"},{"name":"Received","value":"by 10.107.19.230 with SMTP id 99csp2040037iot;        Wed, 21 Sep 2016 08:06:14 -0700 (PDT)"},{"name":"X-Received","value":"by 10.13.237.2 with SMTP id w2mr26536636ywe.339.1474470374838;        Wed, 21 Sep 2016 08:06:14 -0700 (PDT)"},{"name":"Return-Path","value":"<bounce-mc.us2_4406790.1534869-vutran.1710=gmail.com@mail172.atl101.mcdlv.net>"},{"name":"Received","value":"from mail172.atl101.mcdlv.net (mail172.atl101.mcdlv.net. [198.2.130.172])        by mx.google.com with ESMTPS id l204si13304567ybb.126.2016.09.21.08.06.14        for <vutran.1710@gmail.com>        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);        Wed, 21 Sep 2016 08:06:14 -0700 (PDT)"},{"name":"Received-SPF","value":"pass (google.com: domain of bounce-mc.us2_4406790.1534869-vutran.1710=gmail.com@mail172.atl101.mcdlv.net designates 198.2.130.172 as permitted sender) client-ip=198.2.130.172;"},{"name":"Authentication-Results","value":"mx.google.com;       dkim=pass header.i=@mail172.atl101.mcdlv.net;       dkim=pass header.i=@gmail.mcsv.net;       spf=pass (google.com: domain of bounce-mc.us2_4406790.1534869-vutran.1710=gmail.com@mail172.atl101.mcdlv.net designates 198.2.130.172 as permitted sender) smtp.mailfrom=bounce-mc.us2_4406790.1534869-vutran.1710=gmail.com@mail172.atl101.mcdlv.net"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=k1; d=mail172.atl101.mcdlv.net; h=Subject:From:Reply-To:To:Date:Message-ID:List-ID:List-Unsubscribe:Sender:Content-Type:MIME-Version; i=marketing=3Dbignerdranch.com@mail172.atl101.mcdlv.net; bh=Swbr0f5OEBrMnnBWCB3prRC7viw=; b=uR10SFm9Qx+2cRgbHBx+jHL17fOQ9V9vS6xRGr182X7vjks34xMQrVOwTGVLYH4olwhq3MUuZinJ   ka1aHAA8yyeLzhlNp6w4n2q3q87tGMIN3y+Ihd2XdWWlaEXWoFaXmueunGalbZ4e+76auNvjhRKI   ZPYiXdj+FOSMgxSHT2w="},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=k1; d=gmail.mcsv.net; h=Subject:From:Reply-To:To:Date:Message-ID:X-Feedback-ID:List-ID:List-Unsubscribe:Sender:Content-Type:MIME-Version; bh=Swbr0f5OEBrMnnBWCB3prRC7viw=; b=c4jpYCGuPV1hiESR56iAN8wm/o66dq4GGXUrYRUH+FMDLy52/E2RZ+I6EG3afI4iPWQiQVCBqILX   8JHzdlmaA2J2+r2yZm14pRaRyrnTFEZ7cHEHVDD8S+bFYUoEvj43wFM23Klyk+R68m00OJfQCd1S   7R8V/W6VrMmN4+gcbh4="},{"name":"Received","value":"from (127.0.0.1) by mail172.atl101.mcdlv.net id hsaguc1ohl8g for <vutran.1710@gmail.com>; Wed, 21 Sep 2016 15:05:04 +0000 (envelope-from <bounce-mc.us2_4406790.1534869-vutran.1710=gmail.com@mail172.atl101.mcdlv.net>)"},{"name":"Subject","value":"Learn to develop for iOS 10, Swift 3 & Android Nougat. We're here to help.Â "},{"name":"From","value":"Big Nerd Ranch <marketing@bignerdranch.com>"},{"name":"Reply-To","value":"Big Nerd Ranch <marketing@bignerdranch.com>"},{"name":"To","value":"  <vutran.1710@gmail.com>"},{"name":"Date","value":"Wed, 21 Sep 2016 15:05:04 +0000"},{"name":"Message-ID","value":"<7f16dd989403359d5de17bf42bc46af1ed8.20160921150409@mail172.atl101.mcdlv.net>"},{"name":"X-Mailer","value":"MailChimp Mailer - **CIDc72512b4d6bc46af1ed8**"},{"name":"X-Campaign","value":"mailchimp7f16dd989403359d5de17bf42.c72512b4d6"},{"name":"X-campaignid","value":"mailchimp7f16dd989403359d5de17bf42.c72512b4d6"},{"name":"X-Report-Abuse","value":"Please report abuse for this campaign here: http://www.mailchimp.com/abuse/abuse.phtml?u=7f16dd989403359d5de17bf42&id=c72512b4d6&e=bc46af1ed8"},{"name":"X-MC-User","value":"7f16dd989403359d5de17bf42"},{"name":"X-Feedback-ID","value":"4406790:4406790.1534869:us2:mc"},{"name":"List-ID","value":"7f16dd989403359d5de17bf42mc list <7f16dd989403359d5de17bf42.722017.list-id.mcsv.net>"},{"name":"X-Accounttype","value":"pd"},{"name":"List-Unsubscribe","value":"<mailto:unsubscribe-mc.us2_7f16dd989403359d5de17bf42.c72512b4d6-bc46af1ed8@mailin1.us2.mcsv.net?subject=unsubscribe>, <http://bignerdranch.us2.list-manage.com/unsubscribe?u=7f16dd989403359d5de17bf42&id=1bbfbe9c68&e=bc46af1ed8&c=c72512b4d6>"},{"name":"Sender","value":"Big Nerd Ranch <marketing=bignerdranch.com@mail172.atl101.mcdlv.net>"},{"name":"x-mcda","value":"FALSE"},{"name":"Content-Type","value":"multipart/alternative; boundary=\"_----------=_MCPart_1523687115\""},{"name":"MIME-Version","value":"1.0"}],"body":{"size":0},"parts":[{"partId":"0","mimeType":"text/plain","filename":"","headers":[{"name":"Content-Type","value":"text/plain; charset=\"utf-8\"; format=\"fixed\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"body":{"size":5134,"data":"KiogRGlzY292ZXIgdGhlIExhdGVzdCBpbiBBcHAgRGV2DQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCg0KQ29kaW5nIEJvb3RjYW1wczogTm90IEp1c3QgZm9yIEJlZ2lubmVycyAoaHR0cHM6Ly93d3cuYmlnbmVyZHJhbmNoLmNvbS9ibG9nL3doeS1leHBlcmllbmNlZC1wcm9ncmFtbWVycy1zaG91bGQtYXR0ZW5kLWNvZGluZy1ib290Y2FtcHMvP21jX2NpZD1jNzI1MTJiNGQ2Jm1jX2VpZD1bVU5JUUlEXSkNCg0KSXTigJlzIGEgY29tbW9uIGFzc3VtcHRpb24gdGhhdCBjb2RpbmcgYm9vdGNhbXBzIGFyZSBvbmx5IGZvciBzdHVkZW50cyBqdXN0IHN0YXJ0aW5nIHRvIGxlYXJuIHRvIGNvZGUuIEhvd2V2ZXIsIHRoZXkgbWF5IGFjdHVhbGx5IGJlIE1PUkUgdXNlZnVsIGZvciBhZHZhbmNlZCBwcm9ncmFtbWVycy4NCg0KRHVkZSwgV2hlcmUncyBNeSBDYWxsPyAoaHR0cHM6Ly93d3cuYmlnbmVyZHJhbmNoLmNvbS9ibG9nL2R1ZGUtd2hlcmVzLW15LWNhbGwvP21jX2NpZD1jNzI1MTJiNGQ2Jm1jX2VpZD1bVU5JUUlEXSkNCkltYWdpbmUgdGhhdCBvbmUgZGF5IHlvdSdyZSBmZWVkaW5nIHNvbWUgaW5ub2N1b3VzIGxvb2tpbmcgY29kZSBpbnRvIGEgU3dpZnQgY29tcGlsZXIsIGFuZCB0aGVuIHlvdSBnZXQgYSBzbWFja2Rvd24gb2YgYW4gZXJyb3IuIFdoZXJlJ2QgaXQgZ28_IEl0IGdvdCByZW5hbWVkLg0KDQpVSSBVcGRhdGVzIGluIGEgTXVsdGktV2luZG93IFdvcmxkIChodHRwczovL3d3dy5iaWduZXJkcmFuY2guY29tL2Jsb2cvYW5kcm9pZC1hY3Rpdml0eS1saWZlY3ljbGUtb25TdG9wLz9tY19jaWQ9YzcyNTEyYjRkNiZtY19laWQ9W1VOSVFJRF0pDQoNCldpdGggdGhlIHJlbGVhc2Ugb2YgQW5kcm9pZCBOb3VnYXQsIHlvdSBzaG91bGQgY29uc2lkZXIgd2hhdCB5b3VyIFVJIHNob3VsZCBiZSBkb2luZyB3aGVuIHlvdXIgYWN0aXZpdHkgaXMgdmlzaWJsZSB2cy4gaW4gdGhlIGZvcmVncm91bmQgLSBkb24ndCB0cmVhdCB0aGVtIHRoZSBzYW1lLg0KDQpXcml0aW5nIFRlc3RzIHdpdGggYW4gUlNwZWMgU3R5bGUgR3VpZGUgKGh0dHBzOi8vd3d3LmJpZ25lcmRyYW5jaC5jb20vYmxvZy93cml0aW5nLXN0eWxpc2gtdGVzdHMtd2l0aC1hbi1ycHNlYy1zdHlsZS1ndWlkZS8_bWNfY2lkPWM3MjUxMmI0ZDYmbWNfZWlkPVtVTklRSURdKQ0KDQpJdCdzIGNvbW1vbiB0byBoYXZlIGEgc3R5bGUgZ3VpZGUgdG8gaGVscCB3aXRoIGNvZGUgcXVhbGl0eSwgYnV0IGRvIHlvdSBoYXZlIGEgc3R5bGUgZ3VpZGUgZm9yIHlvdXIgdGVzdCBjb2RlPyBIZXJlIGFyZSBhIGhhbmRmdWwgb2YgcHJpbmNpcGxlcyB0byBoZWxwIHlvdSBwcm9kdWNlIG9uZS4NCg0KDQoqKiBSZWdpc3RlciBmb3IgYW4gVXBjb21pbmcgQm9vdGNhbXANCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KQWR2YW5jZWQgaU9TIDogT2N0b2JlciAz4oCUNywgMjAxNg0KSW5zdHJ1Y3RvcjogTWlrZXkgV2FyZA0KQXNpbG9tYXIsIENhbGlmb3JuaWENCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KaU9TIEVzc2VudGlhbHMgd2l0aCBTd2lmdCA6IE9jdG9iZXIgMjLigJQyOCwgMjAxNg0KSW5zdHJ1Y3RvcjogU2NvdHQgUml0Y2hpZQ0KQXNpbG9tYXIsIENhbGlmb3JuaWENCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KQW5kcm9pZCBFc3NlbnRpYWxzIDogTm92ZW1iZXIgN-KAlDExLCAyMDE2DQpJbnN0cnVjdG9yOiBCcmlhbiBHYXJkbmVyDQpDYWxsYXdheSBHYXJkZW5zLCBHZW9yZ2lhDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCmlPUyBFc3NlbnRpYWxzIHdpdGggU3dpZnQgOiBOb3ZlbWJlciAxMuKAlDE4LCAyMDE2DQpJbnN0cnVjdG9yOiBNaWtlIFpvcm5law0KQ2FsbGF3YXkgR2FyZGVucywgR2VvcmdpYQ0KTGVhcm4gTW9yZSAoaHR0cHM6Ly90cmFpbmluZy5iaWduZXJkcmFuY2guY29tLz9tY19jaWQ9YzcyNTEyYjRkNiZtY19laWQ9W1VOSVFJRF0pDQoNCg0KKiogU2V0dGxlIEluIHdpdGggYSBHb29kIFJlYWQNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQpCaWcgTmVyZCBSYW5jaCBQdWJsaXNoZXMgTmV3IEd1aWRlcyAoaHR0cHM6Ly93d3cuYmlnbmVyZHJhbmNoLmNvbS93ZS13cml0ZS8_bWNfY2lkPWM3MjUxMmI0ZDYmbWNfZWlkPVtVTklRSURdKQ0KT3VyIGJvb2tzICYgY2xhc3Nyb29tIGluc3RydWN0aW9uIGdvIHRvZ2V0aGVyIGxpa2UgYm9vdHMgJiBzcHVycywgYnV0IGlmIHlvdSBoYXZlIGEgZ29vZCByZWFzb24gZm9yIG1pc3NpbmcgYSBib290Y2FtcCwgd2UgY2FuIHN0aWxsIHRlYWNoIHlvdSB3aGF0IHlvdSBuZWVkIHRvIGtub3cuDQoNCg0KKiogTWVldCB0aGUgTmVyZHMgV29ybGR3aWRlDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCk91ciBOZXJkcyBzcGVhayAoYW5kIGF0dGVuZCkgY29uZmVyZW5jZXMgd29ybGR3aWRlLiBMb29rIGZvciB0aGVtIGF0IHRoZSBmb2xsb3dpbmcgcGxhY2VzIHdpdGhpbiB0aGUgbmV4dCBtb250aCEgQm9udXMgcG9pbnRzIChhbmQgbmVyZHkgc3dhZykgaWYgeW91IHRha2UgYSBwaWN0dXJlIHdpdGggdGhlbSBhbmQgdGFnIHVzIG9uIFR3aXR0ZXIgKGh0dHA6Ly90d2l0dGVyLmNvbS9iaWduZXJkcmFuY2g_bWNfY2lkPWM3MjUxMmI0ZDYmbWNfZWlkPVtVTklRSURdKSBvciBGYWNlYm9vayAoaHR0cDovL2ZhY2Vib29rLmNvbS9iaWduZXJkcmFuY2g_bWNfY2lkPWM3MjUxMmI0ZDYmbWNfZWlkPVtVTklRSURdKSAuDQpEcm9pZGNvbiBOWUMgMjAxNiA6IFNlcHRlbWJlciAyOeKAlDMwLCAyMDE2DQpOZXcgWW9yayBDaXR5LCBOZXcgWW9yaw0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpKU0NvbmYgQ29sb21iaWEgOiBPY3RvYmVyIDfigJQ4LCAyMDE2DQpNZWRlbGzDrW4sIENvbG9tYmlhDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCkNvbm5lY3QuVEVDSCA6IE9jdG9iZXIgMjDigJQyMiwgMjAxNg0KQXRsYW50YSwgR2VvcmdpYQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpNaWR3ZXN0VVggMjAxNiA6IE9jdG9iZXIgMjDigJQyMiwgMjAxNg0KTG91aXN2aWxsZSwgS2VudHVja3kNCg0KDQoqKiBXb3JkcyBGcm9tIE91ciBBbHVtbmkNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQoiQmlnIE5lcmQgUmFuY2ggaW5zdHJ1Y3RvcnMgYXJlIGFic29sdXRlbHkgdW5yaXZhbGVkIHdpdGggcmVzcGVjdCB0byBjb21taXRtZW50LiBUaGV5IGhhdmUgYW4gb2J2aW91cyBwYXNzaW9uIGZvciBoZWxwaW5nIHRoZWlyIHN0dWRlbnRzIHN1Y2NlZWQuIFlvdSBkb24ndCBoYXZlIHRvIHRha2UgYWR2YW50YWdlIG9mIHRoZSBleHRyYSB0aW1lIHRoZXkgcHV0IGluLCBidXQgSSB3b3VsZCBmZWVsIGNyYXp5IG5vdCB0byBjYXBpdGFsaXplIG9uIHN1Y2ggYSBwaGVub21lbmFsIHJlc291cmNlLiINCi0gSm9uIEJhY2hlbG9yLCBpT1MgRXNzZW50aWFscyB3aXRoIFN3aWZ0IEFsdW1udXMNCg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoqKiBUd2l0dGVyIChodHRwOi8vd3d3LnR3aXR0ZXIuY29tL2JpZ25lcmRyYW5jaD9tY19jaWQ9YzcyNTEyYjRkNiZtY19laWQ9W1VOSVFJRF0pDQoqKiBUd2l0dGVyIChodHRwOi8vd3d3LnR3aXR0ZXIuY29tL2JpZ25lcmRyYW5jaD9tY19jaWQ9YzcyNTEyYjRkNiZtY19laWQ9W1VOSVFJRF0pDQoqKiBGYWNlYm9vayAoaHR0cDovL3d3dy5mYWNlYm9vay5jb20vYmlnbmVyZHJhbmNoP21jX2NpZD1jNzI1MTJiNGQ2Jm1jX2VpZD1bVU5JUUlEXSkNCioqIEZhY2Vib29rIChodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9iaWduZXJkcmFuY2g_bWNfY2lkPWM3MjUxMmI0ZDYmbWNfZWlkPVtVTklRSURdKQ0KKiogTGlua2VkSW4gKGh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55L2JpZ25lcmRyYW5jaD9tY19jaWQ9YzcyNTEyYjRkNiZtY19laWQ9W1VOSVFJRF0pDQoqKiBMaW5rZWRJbiAoaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvYmlnbmVyZHJhbmNoP21jX2NpZD1jNzI1MTJiNGQ2Jm1jX2VpZD1bVU5JUUlEXSkNCioqIFdlYnNpdGUgKGh0dHA6Ly93d3cuYmlnbmVyZHJhbmNoLmNvbT9tY19jaWQ9YzcyNTEyYjRkNiZtY19laWQ9W1VOSVFJRF0pDQoqKiBXZWJzaXRlIChodHRwOi8vd3d3LmJpZ25lcmRyYW5jaC5jb20_bWNfY2lkPWM3MjUxMmI0ZDYmbWNfZWlkPVtVTklRSURdKQ0KQ29weXJpZ2h0IMKpIDIwMTYgQmlnIE5lcmQgUmFuY2gsIEFsbCByaWdodHMgcmVzZXJ2ZWQuDQogWW91IGFyZSByZWNlaXZpbmcgdGhpcyBlbWFpbCBiZWNhdXNlIHlvdSBvcHRlZCBpbiB3aGlsZSBzaWduaW5nIHVwIGZvciBhIEJpZyBOZXJkIFJhbmNoIGNsYXNzLCBldmVudCBvciBhcHAgZGV2ZWxvcG1lbnQgc2VydmljZS4NCg0KT3VyIG1haWxpbmcgYWRkcmVzcyBpczoNCkJpZyBOZXJkIFJhbmNoDQoyMDAgQXJpem9uYSBBdmUgTkUNClN1aXRlIDIwMA0KQXRsYW50YSwgR0EgMzAzMDcNClVTQQ0KKiogdW5zdWJzY3JpYmUgZnJvbSB0aGlzIGxpc3QgKGh0dHA6Ly9iaWduZXJkcmFuY2gudXMyLmxpc3QtbWFuYWdlLmNvbS91bnN1YnNjcmliZT91PTdmMTZkZDk4OTQwMzM1OWQ1ZGUxN2JmNDImaWQ9MWJiZmJlOWM2OCZlPWJjNDZhZjFlZDgmYz1jNzI1MTJiNGQ2KQ0KKiogdXBkYXRlIHN1YnNjcmlwdGlvbiBwcmVmZXJlbmNlcyAoaHR0cDovL2JpZ25lcmRyYW5jaC51czIubGlzdC1tYW5hZ2UuY29tL3Byb2ZpbGU_dT03ZjE2ZGQ5ODk0MDMzNTlkNWRlMTdiZjQyJmlkPTFiYmZiZTljNjgmZT1iYzQ2YWYxZWQ4KQ=="}},{"partId":"1","mimeType":"text/html","filename":"","headers":[{"name":"Content-Type","value":"text/html; charset=\"utf-8\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"body":{"size":89576,"data":""}}]},"sizeEstimate":107009}