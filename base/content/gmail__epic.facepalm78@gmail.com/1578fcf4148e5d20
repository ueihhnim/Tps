{"id":"1578fcf4148e5d20","threadId":"1578fcf4148e5d20","labelIds":["INBOX","CATEGORY_PROMOTIONS","UNREAD"],"snippet":"Code School Why Enroll? Take a look at all of the content a Code School subscription offers. Courses Enrolling gets you unlimited access to 60+ in-depth courses on topics like HTML, CSS, JavaScript,","historyId":"214092","internalDate":"1475586301000","payload":{"mimeType":"multipart/alternative","filename":"","headers":[{"name":"Delivered-To","value":"epic.facepalm78@gmail.com"},{"name":"Received","value":"by 10.107.3.229 with SMTP id e98csp1058597ioi;        Tue, 4 Oct 2016 06:08:26 -0700 (PDT)"},{"name":"X-Received","value":"by 10.37.172.136 with SMTP id x8mr2595794ybi.119.1475586506877;        Tue, 04 Oct 2016 06:08:26 -0700 (PDT)"},{"name":"Return-Path","value":"<bounce-mc.us5_10342275.57377-epic.facepalm78=gmail.com@mail62.suw13.rsgsv.net>"},{"name":"Received","value":"from mail62.suw13.rsgsv.net (mail62.suw13.rsgsv.net. [198.2.183.62])        by mx.google.com with ESMTPS id w20si1268305ybi.287.2016.10.04.06.08.26        for <epic.facepalm78@gmail.com>        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);        Tue, 04 Oct 2016 06:08:26 -0700 (PDT)"},{"name":"Received-SPF","value":"pass (google.com: domain of bounce-mc.us5_10342275.57377-epic.facepalm78=gmail.com@mail62.suw13.rsgsv.net designates 198.2.183.62 as permitted sender) client-ip=198.2.183.62;"},{"name":"Authentication-Results","value":"mx.google.com;       dkim=pass header.i=@codeschool.com;       dkim=pass header.i=@gmail.mcsv.net;       spf=pass (google.com: domain of bounce-mc.us5_10342275.57377-epic.facepalm78=gmail.com@mail62.suw13.rsgsv.net designates 198.2.183.62 as permitted sender) smtp.mailfrom=bounce-mc.us5_10342275.57377-epic.facepalm78=gmail.com@mail62.suw13.rsgsv.net"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=k1; d=codeschool.com; h=Subject:From:Reply-To:To:Date:Message-ID:List-ID:List-Unsubscribe:Content-Type:MIME-Version; i=hal@codeschool.com; bh=F45zIi7AfL4RL7tWHCPIfpVnnr8=; b=n90B65oF+Yw98nGU2CBbXr+Z6dvcCBcun0GiVuVfmrb2bCit3X/jR0W51pSqW1gnmbAIccNesck8   30SZ2VJFnrsCLLrf8K3msM7R0JyV8V60RvLLQ0dXyrumY4FPzk7FPeYT1hnNS+PptQ7mmnwPVQ0U   gKQJfyn4/JHxJF+IFA8="},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=k1; d=gmail.mcsv.net; h=Subject:From:Reply-To:To:Date:Message-ID:X-Feedback-ID:List-ID:List-Unsubscribe:Content-Type:MIME-Version; bh=F45zIi7AfL4RL7tWHCPIfpVnnr8=; b=ZWF4g2HSMpmw7GgZ7B43ibEVme+FE1SAOhS0PLSzGYIsEsT/ls0SuCst3/yx+Oh+oE7BRwG2grKB   oUDwdxLKNhJzK44KafLdEKJVSFSf4OmDQmUXQ2Ggmi9UNt64/K3wFHt7VcjgLVyfaWA7RCeAYSDA   Vg+Gvv3BJ5sB7bGBNH8="},{"name":"Received","value":"from (127.0.0.1) by mail62.suw13.rsgsv.net id hueksk22s7gm for <epic.facepalm78@gmail.com>; Tue, 4 Oct 2016 13:05:01 +0000 (envelope-from <bounce-mc.us5_10342275.57377-epic.facepalm78=gmail.com@mail62.suw13.rsgsv.net>)"},{"name":"Subject","value":"Here's what you'll get"},{"name":"From","value":"Code School <hal@codeschool.com>"},{"name":"Reply-To","value":"Code School <hal@codeschool.com>"},{"name":"To","value":"<epic.facepalm78@gmail.com>"},{"name":"Date","value":"Tue, 4 Oct 2016 13:05:01 +0000"},{"name":"Message-ID","value":"<8234ed62d6a7fa87721ff1d8a036fab5d0e.20161004130449@mail62.suw13.rsgsv.net>"},{"name":"X-Mailer","value":"MailChimp Mailer - **CID9cf63bf5f9036fab5d0e**"},{"name":"X-Campaign","value":"mailchimp8234ed62d6a7fa87721ff1d8a.9cf63bf5f9"},{"name":"X-campaignid","value":"mailchimp8234ed62d6a7fa87721ff1d8a.9cf63bf5f9"},{"name":"X-Report-Abuse","value":"Please report abuse for this campaign here: http://www.mailchimp.com/abuse/abuse.phtml?u=8234ed62d6a7fa87721ff1d8a&id=9cf63bf5f9&e=036fab5d0e"},{"name":"X-MC-User","value":"8234ed62d6a7fa87721ff1d8a"},{"name":"X-Feedback-ID","value":"10342275:10342275.57377:us5:mc"},{"name":"List-ID","value":"8234ed62d6a7fa87721ff1d8amc list <8234ed62d6a7fa87721ff1d8a.24393.list-id.mcsv.net>"},{"name":"X-Accounttype","value":"pr"},{"name":"List-Unsubscribe","value":"<mailto:unsubscribe-mc.us5_8234ed62d6a7fa87721ff1d8a.9cf63bf5f9-036fab5d0e@mailin1.us2.mcsv.net?subject=unsubscribe>, <http://CodeSchool.us5.list-manage1.com/unsubscribe?u=8234ed62d6a7fa87721ff1d8a&id=b819d211aa&e=036fab5d0e&c=9cf63bf5f9>"},{"name":"x-mcda","value":"FALSE"},{"name":"Content-Type","value":"multipart/alternative; boundary=\"_----------=_MCPart_1415695643\""},{"name":"MIME-Version","value":"1.0"}],"body":{"size":0},"parts":[{"partId":"0","mimeType":"text/plain","filename":"","headers":[{"name":"Content-Type","value":"text/plain; charset=\"utf-8\"; format=\"fixed\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"body":{"size":2027,"data":"U3RhcnQgRWFybmluZyBCYWRnZXMgVG9kYXkhDQpIZXJlIGFyZSBzb21lIGZyZWUgY291cnNlcyB0byBnZXQgc3RhcnRlZCB3aXRoLg0KDQpUcnkgU1FMDQpUcnkgU1FMDQpMZWFybiBiYXNpYyBkYXRhYmFzZSBtYW5pcHVsYXRpb24gc2tpbGxzIHVzaW5nIHRoZSBTUUwgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UuDQpFYXJuIHRoaXMgYmFkZ2UgaW4gMSBob3VyIGFuZCAzMCBtaW51dGVzLg0KU3RhcnQgdGhlIENvdXJzZSAoaHR0cDovL0NvZGVTY2hvb2wudXM1Lmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTgyMzRlZDYyZDZhN2ZhODc3MjFmZjFkOGEmaWQ9MTViYjM1MjczYyZlPTAzNmZhYjVkMGUpDQpUcnkgUnVieQ0KVHJ5IFJ1YnkNCkxlYXJuIHRoZSBiYXNpYyBidWlsZGluZyBibG9ja3Mgb2YgUnVieSwgYWxsIGluIHRoZSBicm93c2VyLg0KRWFybiB0aGlzIGJhZGdlIGluIDEgaG91ci4NClN0YXJ0IHRoZSBDb3Vyc2UgKGh0dHA6Ly9Db2RlU2Nob29sLnVzNS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT04MjM0ZWQ2MmQ2YTdmYTg3NzIxZmYxZDhhJmlkPTZlOTE2NDUwNTkmZT0wMzZmYWI1ZDBlKQ0KVHJ5IEdpdA0KVHJ5IEdpdA0KTGVhcm4gaG93IHRvIHVzZSBHaXQgYnkgcmV2aWV3aW5nIHRoZSBiYXNpYyBjb25jZXB0cyBvZiBHaXQgdmVyc2lvbiBjb250cm9sLg0KRWFybiB0aGlzIGJhZGdlIGluIDMwIG1pbnV0ZXMuDQpTdGFydCB0aGUgQ291cnNlIChodHRwOi8vQ29kZVNjaG9vbC51czUubGlzdC1tYW5hZ2UxLmNvbS90cmFjay9jbGljaz91PTgyMzRlZDYyZDZhN2ZhODc3MjFmZjFkOGEmaWQ9MGM3NDk2YmFhOSZlPTAzNmZhYjVkMGUpDQoNCmh0dHA6Ly9Db2RlU2Nob29sLnVzNS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT04MjM0ZWQ2MmQ2YTdmYTg3NzIxZmYxZDhhJmlkPTY5NGQ1ZDIwZTEmZT0wMzZmYWI1ZDBlDQpodHRwOi8vQ29kZVNjaG9vbC51czUubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9ODIzNGVkNjJkNmE3ZmE4NzcyMWZmMWQ4YSZpZD1lYzFhOWU5OWYwJmU9MDM2ZmFiNWQwZSBodHRwOi8vQ29kZVNjaG9vbC51czUubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9ODIzNGVkNjJkNmE3ZmE4NzcyMWZmMWQ4YSZpZD1mOTYzYjJiM2FhJmU9MDM2ZmFiNWQwZSBodHRwOi8vQ29kZVNjaG9vbC51czUubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9ODIzNGVkNjJkNmE3ZmE4NzcyMWZmMWQ4YSZpZD1iOWJlNzZkZTRiJmU9MDM2ZmFiNWQwZSBodHRwOi8vQ29kZVNjaG9vbC51czUubGlzdC1tYW5hZ2UuY29tL3RyYWNrL2NsaWNrP3U9ODIzNGVkNjJkNmE3ZmE4NzcyMWZmMWQ4YSZpZD04Y2I2NzBmZTZlJmU9MDM2ZmFiNWQwZQ0KSGF2ZSBxdWVzdGlvbnMgb3IgbmVlZCBhc3Npc3RhbmNlPw0KU3VwcG9ydCAoaHR0cDovL0NvZGVTY2hvb2wudXM1Lmxpc3QtbWFuYWdlLmNvbS90cmFjay9jbGljaz91PTgyMzRlZDYyZDZhN2ZhODc3MjFmZjFkOGEmaWQ9YWM2MWQ0YTQ3OSZlPTAzNmZhYjVkMGUpDQpGQVEgKGh0dHA6Ly9Db2RlU2Nob29sLnVzNS5saXN0LW1hbmFnZS5jb20vdHJhY2svY2xpY2s_dT04MjM0ZWQ2MmQ2YTdmYTg3NzIxZmYxZDhhJmlkPTcxMGMxODJhOGUmZT0wMzZmYWI1ZDBlKQ0KwqkgMjAxNSBDb2RlIFNjaG9vbCBMTEMuIENyYWZ0ZWQgbG92aW5nbHkgaW4gT3JsYW5kbywgRmxvcmlkYS4NCkNvZGUgU2Nob29sDQo2MTggRSBTb3V0aCBTdHJlZXQNClN1aXRlIDYyMA0KT3JsYW5kbywgRkwgMzI4MDENClVTQQ0KRWRpdCB5b3VyIGVtYWlsIHNldHRpbmdzIChodHRwOi8vQ29kZVNjaG9vbC51czUubGlzdC1tYW5hZ2UyLmNvbS90cmFjay9jbGljaz91PTgyMzRlZDYyZDZhN2ZhODc3MjFmZjFkOGEmaWQ9MWQ1NzI4NjhjYiZlPTAzNmZhYjVkMGUpICAgICBVbnN1YnNjcmliZSAoaHR0cDovL0NvZGVTY2hvb2wudXM1Lmxpc3QtbWFuYWdlMS5jb20vdW5zdWJzY3JpYmU_dT04MjM0ZWQ2MmQ2YTdmYTg3NzIxZmYxZDhhJmlkPWI4MTlkMjExYWEmZT0wMzZmYWI1ZDBlJmM9OWNmNjNiZjVmOSk="}},{"partId":"1","mimeType":"text/html","filename":"","headers":[{"name":"Content-Type","value":"text/html; charset=\"utf-8\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"body":{"size":20048,"data":""}}]},"sizeEstimate":27927}